// Generated by Dagger (https://dagger.dev).
package com.example.androidsoa.di;

import com.example.androidsoa.network.SOAService.SOAApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;
import retrofit2.Retrofit;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ApplicationModule_ProvideSoaServiceFactory implements Factory<SOAApi> {
  private final Provider<Retrofit> retrofitProvider;

  public ApplicationModule_ProvideSoaServiceFactory(Provider<Retrofit> retrofitProvider) {
    this.retrofitProvider = retrofitProvider;
  }

  @Override
  public SOAApi get() {
    return provideSoaService(retrofitProvider.get());
  }

  public static ApplicationModule_ProvideSoaServiceFactory create(
      Provider<Retrofit> retrofitProvider) {
    return new ApplicationModule_ProvideSoaServiceFactory(retrofitProvider);
  }

  public static SOAApi provideSoaService(Retrofit retrofit) {
    return Preconditions.checkNotNullFromProvides(ApplicationModule.provideSoaService(retrofit));
  }
}
